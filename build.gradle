import org.springframework.boot.gradle.plugin.SpringBootPlugin

/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id "io.freefair.lombok" version "${lombok_plugin_version}" apply false
    id "org.liquibase.gradle" version "${liquibase_plugin_version}" apply false
    id 'org.springframework.boot' version "${spring_boot_version}" apply false
}

allprojects {
    group = "com.atguigu.gulimall"
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenLocal()
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        mavenCentral()
    }

}

subprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    assert System.properties["java.specification.version"] == "1.8" || "11" || "12" || "13" || "14"

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'idea'
    apply plugin: 'io.freefair.lombok'
    apply plugin: "org.liquibase.gradle"
    apply plugin: 'org.springframework.boot'

    if (project.name == 'gulimall-common') {
        bootJar {
            enabled = false
        }
        jar {
            enabled = true
        }
    } else {
        bootJar {
            enabled = true
        }
    }

    dependencies {
        // 导入依赖BOM文件
        implementation platform(SpringBootPlugin.BOM_COORDINATES)
        implementation platform("org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}")
        implementation platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${spring_cloud_alibaba_version}")

        if (project.name != 'gulimall-common') {
            implementation project(':gulimall-common')
            testImplementation project(':gulimall-common')
        }

        // Spring boot
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-configuration-processor'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // Spring cloud
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'

        // Spring session
        implementation 'org.springframework.session:spring-session-data-redis'

        // Spring cloud alibaba
        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'
        implementation 'com.alibaba.csp:sentinel-spring-webmvc-adapter'

        // SQL Database 数据库驱动
        implementation 'mysql:mysql-connector-java:8.0.17'
        implementation "com.h2database:h2"
        testImplementation "com.h2database:h2"
        implementation "org.liquibase:liquibase-core"

        // Liquibase 数据库版本管理
        liquibaseRuntime "org.liquibase:liquibase-core"
        liquibaseRuntime sourceSets.main.compileClasspath
        liquibaseRuntime "mysql:mysql-connector-java"
        liquibaseRuntime "com.h2database:h2"

        implementation 'com.baomidou:mybatis-plus-boot-starter:3.2.0'
        implementation 'redis.clients:jedis:3.1.0'
        //implementation 'org.projectlombok:lombok:1.18.8'
        implementation 'org.apache.httpcomponents:fluent-hc:4.5.12'
        implementation 'commons-lang:commons-lang:2.6'
        implementation 'javax.validation:validation-api:2.0.1.Final'
        implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'
        compileOnly 'javax.servlet:javax.servlet-api:3.1.0'

    }

    ext {
        diffChangelogFile = "src/main/resources/config/liquibase/changelog/" + new Date().format("yyyyMMddHHmmss") + "_changelog.xml"
    }

    if (!project.hasProperty("runList")) {
        project.ext.runList = "main"
    }

    liquibase {
        activities {
            main {
                driver ""
                url ""
                username "gulimall"
                password ""
                changeLogFile "src/main/resources/config/liquibase/master.xml"
                defaultSchemaName ""
                logLevel "debug"
                classpath "src/main/resources/"
            }
            diffLog {
                driver ""
                url ""
                username "gulimall"
                password ""
                changeLogFile project.ext.diffChangelogFile
                referenceUrl "hibernate:spring:com.mycompany.myapp.domain?dialect=&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
                defaultSchemaName ""
                logLevel "debug"
                classpath "$buildDir/classes/java/main"
            }
        }
        runList = project.ext.runList
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

wrapper {
    gradleVersion = "6.5"
}
